{"version":3,"sources":["images/signUP.svg","Components/InputField.js","Components/Button.js","core.js","Screen/SignUpScreen.jsx","config/routes.js","images/logIn.svg","Screen/LogIn.jsx","Components/DashBoardCmp/EditModal.jsx","Components/DashBoardCmp/CardCmp.jsx","Components/DashBoardCmp/Navbar.js","Screen/DashboardScreen.jsx","App.jsx","reportWebVitals.js","index.js","Components/DashBoardCmp/CardCmp.module.css","Screen/Dashboard.module.css"],"names":["useStyles","makeStyles","box","width","margin","input","small","color","fontSize","InputTextFeild","label","type","props","useField","field","classes","Box","className","component","noValidate","autoComplete","TextField","variant","name","FormButton","value","addFun","Stack","spacing","direction","Button","style","backgroundColor","onClick","role","BASE_URI","window","location","hostname","split","SignUpScreen","useState","loading","setLoading","isSignUp","setIsSignUp","errorBoxClass","setErrorBoxClass","validate_Schema","Yup","firstName","max","required","lastName","emailAddress","email","password","min","confirmPassword","oneOf","history","useHistory","loginPage","replace","localStorage","getItem","push","src","SignUpImg","alt","initialValues","onSubmit","values","axios","post","then","res","console","log","data","setTimeout","catch","err","signUp","validationSchema","to","PrivateRoute","Component","render","LogIn","errorMsg","setErrorMsg","validate","LoginPic","status","setItem","JSON","stringify","login","EditModal","placeHolder","editPostFun","indexNum","show","setShow","textValue","setTextValue","errorBorder","setErrorBorder","handleClose","Modal","onHide","Header","closeButton","Title","Body","border","placeholder","id","onChange","e","target","Footer","length","CardCmp","postCap","date","ind","deletePost","styles","cardMainBox","cardHeader","iconBOx","borderLeft","padding","cardBody","cardFooter","NavbarApp","Navbar","expand","Brand","href","Toggle","Collapse","Nav","Link","removeItem","DashboardScreen","inputValue","setInputValue","parse","user","setIndexNum","postSend","setPostSend","useEffect","a","get","setPost","userName","postCapture","uid","addPost","postObj","Date","toLocaleDateString","userId","_id","editPost","editValue","postKey","uPostId","put","delete","postSectionBox","postBox","postCardHeading","postInputBox","cols","rows","postBtns","map","val","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c795bc56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/signUP.eaeca0fe.svg\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {ErrorMessage, useField} from \"formik\";\r\nimport { margin } from '@mui/system';\r\n\r\nconst useStyles = makeStyles({\r\n    box : {\r\n        width : \"100%\",\r\n        // border : \"1px solid lime\",\r\n        margin : \"10px 0\"\r\n    },\r\n    input:{\r\n        width : \"100%\"\r\n    },\r\n    small : {\r\n        color : \"red\",\r\n        fontSize: \"10px\"\r\n    }\r\n})\r\n\r\nexport default function InputTextFeild({label ,type , ...props}) {\r\n    const [field , meta] = useField(props)\r\n    \r\n    const classes  = useStyles()\r\n    return (\r\n    <Box\r\n    className={classes.box}\r\n      component=\"form\"\r\n    //   sx={{\r\n    //     '& > :not(style)': { m: 1, width: '25ch' },\r\n    //   }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n  \r\n      <TextField   type={type} className={classes.input}   {...field} label={label}  variant=\"standard\" />\r\n        <ErrorMessage  className={classes.small} name={field.name} component=\"small\" />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport default function FormButton({ value ,addFun }) {\r\n  // console.log(value)\r\n  return (\r\n    <Stack spacing={2} direction=\"row\">\r\n      <Button\r\n        style={{ width: \"100%\", backgroundColor: \"#09DEEA\" }}\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        onClick={addFun ? ()=>addFun() :null }\r\n        \r\n      >\r\n        {value === true ? (\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          value\r\n        )}\r\n      </Button>\r\n    </Stack>\r\n  );\r\n}\r\n","const dev = \"http://localhost:5000\"\r\nexport const BASE_URI = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import React, { useState } from \"react\";\r\nimport \"./signup.css\";\r\nimport SignUpImg from \"../images/signUP.svg\";\r\nimport InputTextFeild from \"../Components/InputField\";\r\nimport { Formik, Form } from \"formik\";\r\nimport FormButton from \"../Components/Button\";\r\nimport * as Yup from \"yup\";\r\nimport { Link ,useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {BASE_URI} from \"../core\"\r\n\r\nconst SignUpScreen = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const [errorBoxClass , setErrorBoxClass ] = useState(\"errorBOx\")\r\n  const validate_Schema = Yup.object({\r\n    firstName: Yup.string()\r\n      .max(15, \"Must be 15 characters or less\")\r\n      .required(\"Required\"),\r\n    lastName: Yup.string()\r\n      .max(15, \"Must be 15 characters or less\")\r\n      .required(\"Required\"),\r\n    emailAddress: Yup.string()\r\n      .email(\"Enter a valid Email\")\r\n      .required(\"Required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Password should be of minimum 8 characters length\")\r\n      .required(\"Required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Password Must be Match\")\r\n      .required(\"Required\"),\r\n  });\r\n \r\n  \r\n  const signUp = (values) => {\r\n    setLoading(true);\r\n    axios\r\n      .post(`${BASE_URI}/api/v1/signup`, {\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        emailAddress: values.emailAddress,\r\n        password: values.password,\r\n        confirmPassword: values.confirmPassword,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setLoading(false)\r\n        if(res.data === `This Email Address is Already Exist`){\r\n          console.log(res.data)\r\n          setErrorBoxClass(\"errorBOx show\")\r\n          setTimeout(()=>{\r\n          setErrorBoxClass(\"errorBOx\")\r\n\r\n          } , 3000)\r\n        }else{\r\n          \r\n          setIsSignUp(true)\r\n        }\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n         setLoading(false) });\r\n    console.log(values.firstName);\r\n  };\r\n  const history  = useHistory()\r\n  const loginPage = ()=>{\r\n        history.replace('/')\r\n  }\r\n  if(localStorage.getItem(\"data\")){\r\n    history.push(\"/dashboard\")\r\n  }\r\n  return (\r\n    <div className=\"signUpBox\">\r\n      <h3 className={errorBoxClass}>Email Address is Already Exist</h3>\r\n      <div className=\"signUpImg\">\r\n        <img src={SignUpImg} width=\"100%\" alt=\"\" />\r\n      </div>\r\n\r\n      <div className=\"upFOrmBOx\">\r\n        <h2>\r\n          <span> Sign Up </span> Form\r\n        </h2>\r\n        <Formik\r\n          initialValues={{\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            emailAddress: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n          }}\r\n          onSubmit={(values) => signUp(values)}\r\n          validationSchema={validate_Schema}\r\n        >\r\n          {(values) => (\r\n            <Form>\r\n              <InputTextFeild label=\"First Name\" type=\"text\" name=\"firstName\" />\r\n              <InputTextFeild label=\"Last Name\" type=\"text\" name=\"lastName\" />\r\n              <InputTextFeild\r\n                label=\"Email Address\"\r\n                type=\"text\"\r\n                name=\"emailAddress\"\r\n              />\r\n              <InputTextFeild\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n              />\r\n              <InputTextFeild\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n              />\r\n              <Link to=\"/\">\r\n                <small>Already have an Account? Sign In </small>\r\n              </Link>\r\n\r\n              {!isSignUp ?\r\n              <FormButton value={loading ? true : \"Sign Up\"} /> :\r\n              <FormButton  addFun={loginPage} value={\"User Succesfully Signup\"} />\r\n              }\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpScreen;\r\n","import React from 'react'\r\nimport { Route , Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({component:Component , ...rest}) => {\r\n      return( \r\n           <Route render={(props)=>{\r\n            return localStorage.getItem(\"data\") ?\r\n            <Component {...props} />\r\n             : <Redirect to=\"/\" />\r\n        }} />\r\n            )\r\n\r\n}\r\n\r\nexport default PrivateRoute\r\n","export default __webpack_public_path__ + \"static/media/logIn.701cdcf3.svg\";","import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\nimport LoginPic from \"../images/logIn.svg\";\r\nimport { Form, Formik } from \"formik\";\r\nimport InputTextFeild from \"../Components/InputField\";\r\nimport FormButton from \"../Components/Button\";\r\nimport * as Yup from \"yup\";\r\nimport { Link , useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {BASE_URI} from \"../core\"\r\n\r\nconst LogIn = () => {\r\n  // const history = useHistory()\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(null)\r\n  const [errorBoxClass , setErrorBoxClass ] = useState(\"errorBOx\")\r\n  const history =  useHistory() \r\n  const validate = Yup.object({\r\n    emailAddress: Yup.string()\r\n      .required(\"Required\")\r\n      .email(\"Enter a valid Email\"),\r\n    password: Yup.string()\r\n      .required(\"Required\")\r\n      .min(6, \"Password should be of minimum 8 characters length\"),\r\n  });\r\n  if(localStorage.getItem(\"data\")){\r\n    history.push(\"/dashboard\")\r\n  }\r\n\r\n  const login = (values) => {\r\n    // console.log(values);\r\n    setLoading(true)\r\n    axios\r\n      .post(`${BASE_URI}/api/v1/signin`, {\r\n        emailAddress: values.emailAddress,\r\n        password: values.password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if(res.data.status == \"login successfully\"){\r\n            localStorage.setItem(\"data\",JSON.stringify(res.data.data))\r\n          history.replace(\"/dashboard\")\r\n        }else{\r\n            setErrorMsg(res.data)\r\n            setErrorBoxClass(\"errorBOx show\")\r\n            setTimeout(()=>{\r\n              setErrorBoxClass(\"errorBOx\")\r\n    \r\n              } , 3000)\r\n        }\r\n\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div className=\"loginBox\">\r\n      <h3 className={errorBoxClass}>{errorMsg}</h3>\r\n      <div className=\"LoginPic\">\r\n        <img src={LoginPic} width=\"100%\" alt=\"\" />\r\n      </div>\r\n\r\n      <div className=\"loginForm\">\r\n        <h2>Hello,</h2>\r\n        <h2>Welcome Back</h2>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            emailAddress: \"\",\r\n            password: \"\",\r\n          }}\r\n          onSubmit={(values) => login(values)}\r\n          validationSchema={validate}\r\n        >\r\n          {(values) => (\r\n            <Form>\r\n              <InputTextFeild\r\n                label=\"User Email Address\"\r\n                type=\"email\"\r\n                name=\"emailAddress\"\r\n              />\r\n              <InputTextFeild\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n              />\r\n              <small className=\"forgetDiv\">Forget Password?</small>\r\n              <FormButton value={ loading ? true : \"Login\"} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Link to=\"signup\">\r\n          <small className=\"notAcc\">Don't have An Account? Click Here</small>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import React, { useState } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport  \"./EditModal.css\"\r\nconst EditModal = ({placeHolder , editPostFun ,indexNum}) => {\r\n    const [show, setShow] = useState(false);\r\n    const [textValue , setTextValue] = useState(\"\")\r\n    const [errorBorder ,setErrorBorder] = useState(false)\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const saveChange = ()=>{\r\n        if(textValue.length > 3){\r\n            handleClose();\r\n            editPostFun(indexNum , textValue)\r\n        }else{\r\n                setErrorBorder(true)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n        <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Edit\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Post Edit</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"p-0\">\r\n            <textarea name=\"\" style={{border :errorBorder ? \"1px solid red\" : \"none\"}} placeholder={placeHolder} id=\"\"\r\n            onChange={e=>setTextValue(e.target.value)}\r\n            className=\"w-100 h-100  modalTextArea\"></textarea>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>saveChange()}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditModal\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./CardCmp.module.css\";\r\nimport { FaUserCircle } from \"react-icons/all\";\r\nimport EditModal from \"./EditModal\";\r\nconst CardCmp = ({name , postCap , date,ind , editPostFun, deletePost}) => {\r\n    \r\n    return (\r\n    <div className={styles.cardMainBox} >\r\n      <section className={styles.cardHeader}>\r\n        <div className={styles.iconBOx}>\r\n          <FaUserCircle />\r\n        </div>\r\n        <div style={{borderLeft : \"1px solid lightgrey\" , padding : \"5px\"}}>\r\n          <p>{name}</p>\r\n          <p>{date}</p>\r\n        </div>\r\n      </section>\r\n      <section className={styles.cardBody}>\r\n       \r\n        <p>\r\n            {postCap}\r\n        </p> \r\n        \r\n      </section>\r\n      <section className={styles.cardFooter}>\r\n          {/* <button id={ind}  className=\"btn btn-primary\">Edit</button> */}\r\n          <EditModal editPostFun={editPostFun} indexNum={ind} placeHolder={postCap} />\r\n          <button id={ind} onClick={(e)=>deletePost(e.target.id)} className=\"btn btn-danger\">DELETE</button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardCmp;\r\n","import React from 'react'\r\nimport { Navbar , Nav} from \"react-bootstrap\"\r\nimport { useHistory } from 'react-router'\r\nconst NavbarApp = () => {\r\n  const history = useHistory()\r\n  const logout =()=>{\r\n      localStorage.removeItem(\"data\")\r\n      history.replace('/')\r\n  }\r\n  return (\r\n        <div>\r\n            <Navbar style={{backgroundColor : \"#09DEEA\"}} expand=\"lg\">\r\n  <Navbar.Brand href=\"#home\">Carrier <del>Carrer</del> </Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"ml-auto\">\r\n      <Nav.Link href=\"#home\">Home</Nav.Link>\r\n      <Nav.Link href=\"#link\">Profile</Nav.Link>\r\n      <Nav.Link href=\"javascript:void()\" onClick={()=>logout()}>LOGOUT</Nav.Link>\r\n      {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n      </NavDropdown> */}\r\n    </Nav>\r\n    \r\n  </Navbar.Collapse>\r\n</Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavbarApp\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CardCmp from \"../Components/DashBoardCmp/CardCmp\";\r\nimport NavbarApp from \"../Components/DashBoardCmp/Navbar\";\r\nimport styles from \"./Dashboard.module.css\";\r\nimport axios from \"axios\"\r\nimport {BASE_URI} from \"../core\"\r\n\r\nconst DashboardScreen = () => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"data\")));\r\n  const [indexNum, setIndexNum] = useState(null);\r\n  const [postSend ,setPostSend] = useState(false)\r\n  console.log(\"index =>>\" ,indexNum)\r\n  console.log(user);\r\n  \r\n    useEffect(async ()=>{\r\n        await axios.get(`${BASE_URI}/api/v1/post`)\r\n        .then(res=>{\r\n            console.log(res.data)\r\n            setPost([...res.data])\r\n        })\r\n        .catch(err=>{\r\n          console.log(err)\r\n        })\r\n    } , [postSend])\r\n  const [post, setPost] = useState([\r\n    {\r\n      userName: \"Jaff\",\r\n      postCapture:\r\n        \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Facilis, culpa.\",\r\n      date: \"1/11/2021\",\r\n      uid: \"12345\",\r\n    },\r\n    {\r\n      userName: \"Jaffar\",\r\n      postCapture:\r\n        \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Facilis, culpa.\",\r\n      date: \"10/11/2021\",\r\n      uid: \"12345\",\r\n    },\r\n  ]);\r\n\r\n  // console.log(post);\r\n  // console.log('post arhi hai , ' + )\r\n\r\n  const addPost =async () => {\r\n    const postObj = {\r\n        userName: user.firstName + user.lastName,\r\n        postCapture: inputValue,\r\n        date: new Date().toLocaleDateString(),\r\n        userId : user._id,\r\n    }\r\n    await axios.post(`${BASE_URI}/api/v1/post` , postObj )\r\n    .then(res=>{\r\n      console.log(res)\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n    setPostSend(!postSend)\r\n    // setPost([\r\n    //   ...post,\r\n    //   {\r\n    //     userName: user.firstName + user.lastName,\r\n    //     postCapture: inputValue,\r\n    //     date: new Date().toLocaleDateString(),\r\n    //     uid: user._id,\r\n    //   },\r\n    // ]);\r\n  };\r\n  const removeValue = () => {\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  const editPost = (ind , editValue)=>{\r\n    const postKey = {\r\n      uPostId : post[ind]._id\r\n      }\r\n    console.log(postKey)\r\n    axios.put(`${BASE_URI}/api/v1/post` , {postCap : editValue , uPostId : postKey.uPostId})\r\n    .then(res=>{\r\n      console.log(res)\r\n    })\r\n    .catch(err=>{\r\n      console.log(err)\r\n    })\r\n    setPostSend(!postSend)\r\n\r\n    // console.log(\"edit function\" , ind)\r\n        // post[ind].postCapture = editValue\r\n        // post[ind].date = new Date().toLocaleDateString()\r\n        // setPost([...post])\r\n    }\r\n\r\n   const deletePost = async (e)=>{\r\n    const postKey = {\r\n      uPostId :   post[e]._id\r\n    }   \r\n    console.log(postKey)\r\n    await axios.delete(`${BASE_URI}/api/v1/post/${postKey.uPostId}`   )\r\n      .then(res=>console.log(res))\r\n      .catch(err=>console.log(err))\r\n    setPostSend(!postSend)\r\n      \r\n            // console.log(\"deletePost\" , e)\r\n            // post.splice(e , 1)\r\n            // setPost([...post])\r\n   } \r\n  return (\r\n    <div className=\"w-100\">\r\n      {/* <h1>Dashboard Screen</h1> */}\r\n      <NavbarApp />\r\n\r\n      <div className={styles.postSectionBox}>\r\n        <div className={styles.postBox}>\r\n          <section className={styles.postCardHeading}>\r\n            <p>Create Post</p>\r\n          </section>\r\n          <section className={styles.postInputBox}>\r\n            <textarea\r\n              name=\"\"\r\n              id=\"\"\r\n              cols=\"30\"\r\n              rows=\"3\"\r\n              value={inputValue}\r\n              onChange={(e) => setInputValue(e.target.value)}\r\n              placeholder=\"What's on your mind?\"\r\n            ></textarea>\r\n          </section>\r\n          <section className={styles.postBtns}>\r\n            <button onClick={() => removeValue()} className={`btn btn-danger`}>\r\n              Remove\r\n            </button>\r\n            <button onClick={() => addPost()} className={`btn btn-primary`}>\r\n              POST\r\n            </button>\r\n          </section>\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"row m-0\">\r\n        {post.map((val, ind) => {\r\n            // console.log(val._id)\r\n              \r\n              return (\r\n                  \r\n                    user._id === val.userId ?\r\n                    <div className=\"col-lg-3 col-md-6\">\r\n                  <CardCmp\r\n                    name={val.userName}\r\n                    ind={ind}\r\n                    date={val.date}\r\n                    postCap={val.postCapture}\r\n                    indexNum={indexNum}\r\n                    setIndexNum={setIndexNum}\r\n                    editPostFun={editPost}\r\n                    deletePost={deletePost}\r\n                        \r\n                  />\r\n                </div> : null\r\n                  \r\n                \r\n              );  \r\n            \r\n          \r\n        })}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","import React from 'react'\r\nimport SignUpScreen from './Screen/SignUpScreen'\r\nimport \"./maincssFile.css\"\r\nimport PrivateRoute from \"./config/routes\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport LogIn from './Screen/LogIn';\r\nimport  DashboardScreen from \"./Screen/DashboardScreen\"\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n            <Switch>\r\n        \r\n                <Route  path=\"/signup\"  component={SignUpScreen} />\r\n                \r\n                \r\n                <Route exact path=\"/\" component={LogIn} />\r\n                \r\n                <PrivateRoute component={DashboardScreen} exact path=\"/dashboard\" />\r\n                {/* <Route exact path=\"/dashboard\" component={DashboardScreen} /> */}\r\n            \r\n            </Switch>\r\n            </Router>\r\n                \r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\r\n      \r\n      <App />\r\n\r\n\r\n    \r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardMainBox\":\"CardCmp_cardMainBox__XijSp\",\"cardHeader\":\"CardCmp_cardHeader__2jc87\",\"iconBOx\":\"CardCmp_iconBOx__Mcy4m\",\"cardBody\":\"CardCmp_cardBody__38uTH\",\"cardFooter\":\"CardCmp_cardFooter__1aijW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postSectionBox\":\"Dashboard_postSectionBox__2DHIw\",\"postBox\":\"Dashboard_postBox__zdWqf\",\"postCardHeading\":\"Dashboard_postCardHeading__2SxI6\",\"postInputBox\":\"Dashboard_postInputBox__3aNR7\",\"postBtns\":\"Dashboard_postBtns__UmX0C\"};"],"sourceRoot":""}
{"version":3,"sources":["images/signUP.svg","Components/InputField.js","Components/Button.js","Screen/SignUpScreen.jsx","images/logIn.svg","Screen/LogIn.jsx","Screen/DashboardScreen.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","box","width","margin","input","small","color","fontSize","InputTextFeild","label","type","props","useField","field","classes","Box","className","component","noValidate","autoComplete","TextField","variant","name","FormButton","value","addFun","Stack","spacing","direction","Button","style","backgroundColor","onClick","role","SignUpScreen","useState","loading","setLoading","isSignUp","setIsSignUp","errorBoxClass","setErrorBoxClass","validate_Schema","Yup","firstName","max","required","lastName","emailAddress","email","password","min","confirmPassword","oneOf","history","useHistory","loginPage","replace","src","SignUpImg","alt","initialValues","onSubmit","values","axios","post","then","res","console","log","data","setTimeout","catch","err","signUp","validationSchema","to","LogIn","errorMsg","setErrorMsg","validate","LoginPic","login","DashboardScreen","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30e18073.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/signUP.eaeca0fe.svg\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {ErrorMessage, useField} from \"formik\";\r\nimport { margin } from '@mui/system';\r\n\r\nconst useStyles = makeStyles({\r\n    box : {\r\n        width : \"100%\",\r\n        // border : \"1px solid lime\",\r\n        margin : \"10px 0\"\r\n    },\r\n    input:{\r\n        width : \"100%\"\r\n    },\r\n    small : {\r\n        color : \"red\",\r\n        fontSize: \"10px\"\r\n    }\r\n})\r\n\r\nexport default function InputTextFeild({label ,type , ...props}) {\r\n    const [field , meta] = useField(props)\r\n    \r\n    const classes  = useStyles()\r\n    return (\r\n    <Box\r\n    className={classes.box}\r\n      component=\"form\"\r\n    //   sx={{\r\n    //     '& > :not(style)': { m: 1, width: '25ch' },\r\n    //   }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n  \r\n      <TextField   type={type} className={classes.input}   {...field} label={label}  variant=\"standard\" />\r\n        <ErrorMessage  className={classes.small} name={field.name} component=\"small\" />\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport default function FormButton({ value ,addFun }) {\r\n  // console.log(value)\r\n  return (\r\n    <Stack spacing={2} direction=\"row\">\r\n      <Button\r\n        style={{ width: \"100%\", backgroundColor: \"#09DEEA\" }}\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        onClick={addFun ? ()=>addFun() :null }\r\n        \r\n      >\r\n        {value === true ? (\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          value\r\n        )}\r\n      </Button>\r\n    </Stack>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./signup.css\";\r\nimport SignUpImg from \"../images/signUP.svg\";\r\nimport InputTextFeild from \"../Components/InputField\";\r\nimport { Formik, Form } from \"formik\";\r\nimport FormButton from \"../Components/Button\";\r\nimport * as Yup from \"yup\";\r\nimport { Link ,useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst SignUpScreen = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const [errorBoxClass , setErrorBoxClass ] = useState(\"errorBOx\")\r\n  const validate_Schema = Yup.object({\r\n    firstName: Yup.string()\r\n      .max(15, \"Must be 15 characters or less\")\r\n      .required(\"Required\"),\r\n    lastName: Yup.string()\r\n      .max(15, \"Must be 15 characters or less\")\r\n      .required(\"Required\"),\r\n    emailAddress: Yup.string()\r\n      .email(\"Enter a valid Email\")\r\n      .required(\"Required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Password should be of minimum 8 characters length\")\r\n      .required(\"Required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Password Must be Match\")\r\n      .required(\"Required\"),\r\n  });\r\n\r\n  \r\n  const signUp = (values) => {\r\n    setLoading(true);\r\n    axios\r\n      .post(\"http://localhost:5000/api/v1/signup\", {\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        emailAddress: values.emailAddress,\r\n        password: values.password,\r\n        confirmPassword: values.confirmPassword,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setLoading(false)\r\n        if(res.data === `This Email Address is Already Exist`){\r\n          console.log(res.data)\r\n          setErrorBoxClass(\"errorBOx show\")\r\n          setTimeout(()=>{\r\n          setErrorBoxClass(\"errorBOx\")\r\n\r\n          } , 3000)\r\n        }else{\r\n          \r\n          setIsSignUp(true)\r\n        }\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n         setLoading(false) });\r\n    console.log(values.firstName);\r\n  };\r\n  const history  = useHistory()\r\n  const loginPage = ()=>{\r\n        history.replace('/')\r\n  }\r\n  return (\r\n    <div className=\"signUpBox\">\r\n      <h3 className={errorBoxClass}>Email Address is Already Exist</h3>\r\n      <div className=\"signUpImg\">\r\n        <img src={SignUpImg} width=\"100%\" alt=\"\" />\r\n      </div>\r\n\r\n      <div className=\"upFOrmBOx\">\r\n        <h2>\r\n          <span> Sign Up </span> Form\r\n        </h2>\r\n        <Formik\r\n          initialValues={{\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            emailAddress: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n          }}\r\n          onSubmit={(values) => signUp(values)}\r\n          validationSchema={validate_Schema}\r\n        >\r\n          {(values) => (\r\n            <Form>\r\n              <InputTextFeild label=\"First Name\" type=\"text\" name=\"firstName\" />\r\n              <InputTextFeild label=\"Last Name\" type=\"text\" name=\"lastName\" />\r\n              <InputTextFeild\r\n                label=\"Email Address\"\r\n                type=\"text\"\r\n                name=\"emailAddress\"\r\n              />\r\n              <InputTextFeild\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n              />\r\n              <InputTextFeild\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n              />\r\n              <Link to=\"/\">\r\n                <small>Already have an Account? Sign In </small>\r\n              </Link>\r\n\r\n              {!isSignUp ?\r\n              <FormButton value={loading ? true : \"Sign Up\"} /> :\r\n              <FormButton  addFun={loginPage} value={\"User Succesfully Signup\"} />\r\n              }\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpScreen;\r\n","export default __webpack_public_path__ + \"static/media/logIn.701cdcf3.svg\";","import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\nimport LoginPic from \"../images/logIn.svg\";\r\nimport { Form, Formik } from \"formik\";\r\nimport InputTextFeild from \"../Components/InputField\";\r\nimport FormButton from \"../Components/Button\";\r\nimport * as Yup from \"yup\";\r\nimport { Link , useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nconst LogIn = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(null)\r\n  const [errorBoxClass , setErrorBoxClass ] = useState(\"errorBOx\")\r\n  const history =  useHistory() \r\n  const validate = Yup.object({\r\n    emailAddress: Yup.string()\r\n      .required(\"Required\")\r\n      .email(\"Enter a valid Email\"),\r\n    password: Yup.string()\r\n      .required(\"Required\")\r\n      .min(6, \"Password should be of minimum 8 characters length\"),\r\n  });\r\n  const login = (values) => {\r\n    // console.log(values);\r\n    setLoading(true)\r\n    axios\r\n      .post(\"http://localhost:5000/api/v1/signin\", {\r\n        emailAddress: values.emailAddress,\r\n        password: values.password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        if(res.data == \"login successfully\"){\r\n          history.replace(\"/dashboard\")\r\n        }else{\r\n            setErrorMsg(res.data)\r\n            setErrorBoxClass(\"errorBOx show\")\r\n            setTimeout(()=>{\r\n              setErrorBoxClass(\"errorBOx\")\r\n    \r\n              } , 3000)\r\n        }\r\n\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div className=\"loginBox\">\r\n      <h3 className={errorBoxClass}>{errorMsg}</h3>\r\n      <div className=\"LoginPic\">\r\n        <img src={LoginPic} width=\"100%\" alt=\"\" />\r\n      </div>\r\n\r\n      <div className=\"loginForm\">\r\n        <h2>Hello,</h2>\r\n        <h2>Welcome Back</h2>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            emailAddress: \"\",\r\n            password: \"\",\r\n          }}\r\n          onSubmit={(values) => login(values)}\r\n          validationSchema={validate}\r\n        >\r\n          {(values) => (\r\n            <Form>\r\n              <InputTextFeild\r\n                label=\"User Email Address\"\r\n                type=\"email\"\r\n                name=\"emailAddress\"\r\n              />\r\n              <InputTextFeild\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n              />\r\n              <small className=\"forgetDiv\">Forget Password?</small>\r\n              <FormButton value={ loading ? true : \"Login\"} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Link to=\"signup\">\r\n          <small className=\"notAcc\">Don't have An Account? Click Here</small>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import React from 'react'\r\n\r\nconst DashboardScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Dashboard Screen</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardScreen\r\n","import React from 'react'\r\nimport SignUpScreen from './Screen/SignUpScreen'\r\nimport \"./maincssFile.css\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport LogIn from './Screen/LogIn';\r\nimport  DashboardScreen from \"./Screen/DashboardScreen\"\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n            <Switch>\r\n        \r\n                <Route  path=\"/signup\"  component={SignUpScreen} />\r\n                \r\n                <Route exact path=\"/\" component={LogIn} />\r\n                <Route exact path=\"/dashboard\" component={DashboardScreen} />\r\n            \r\n            </Switch>\r\n            </Router>\r\n                \r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n\n      \n      <App />\n\n\n    \n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}